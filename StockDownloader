package observerPattern;

import java.net.URL;
import java.net.URLConnection;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Scanner;

import javax.swing.JTable;

public class StockDownloader {

	public static final int DATE = 0;
	public static final int OPEN = 0;
	public static final int HIGH = 0;
	public static final int LOW = 0;
	public static final int CLOSE = 0;
	public static final int VOLUME = 0;
	public static final int ADJCLOSE = 0;

	private ArrayList<GregorianCalendar> dates;
	private ArrayList<Double> opens;
	private ArrayList<Double> highs;
	private ArrayList<Double> lows;
	private ArrayList<Double> closes;
	private ArrayList<Integer> volumes;
	private ArrayList<Double> adjcloses;

	public StockDownloader(String symbol, GregorianCalendar start, GregorianCalendar end){


		dates = new ArrayList<GregorianCalendar>();
		opens = new ArrayList<Double>();
		highs = new ArrayList<Double>();
		lows = new ArrayList<Double>();
		closes = new ArrayList<Double>();
		volumes = new ArrayList<Integer>();
		adjcloses = new ArrayList<Double>();


		//http://real-chart.finance.yahoo.com/table.csv?s=IBM&d=6&e=17&f=2015&g=d&a=0&b=2&c=1962&ignore=.csv

		String url = "http://real-chart.finance.yahoo.com/table.csv?s="+symbol+
				"&d="+start.get(Calendar.MONTH)+
				"&e="+start.get(Calendar.DAY_OF_MONTH)+
				"&f="+start.get(Calendar.YEAR)+
				"&g=d&a="+end.get(Calendar.MONTH)+
				"&b="+end.get(Calendar.DAY_OF_MONTH)+
				"&c="+end.get(Calendar.YEAR)+"&ignore=.csv";

		try
		{
			URL yahooFinance = new URL(url);
			URLConnection data =  yahooFinance.openConnection();
			Scanner input = new Scanner(data.getInputStream());
			if(input.hasNext()){
				input.nextLine();
				
				System.out.println("Opens " + "Highs " + "Lows " + "Closes " + "Volumes " + "Adj Close ");
				
				
				while(input.hasNextLine()){
							
					String [] line = input.nextLine().split(",");
					
					
//					DateFormat df = new SimpleDateFormat("MM-dd-yyyy");
//					Date date = df.parse(line[0]);
//					GregorianCalendar cal = (GregorianCalendar) GregorianCalendar.getInstance();
//					cal.setTime(date);
//					
//					GregorianCalendar datess = cal;
					double openss = Double.parseDouble(line[1]);
					double highss = Double.parseDouble(line[2]);
					double lowss = Double.parseDouble(line[3]);
					double closess = Double.parseDouble(line[4]);
					int volumess =  Integer.parseInt(line[5]);
					double adjclosess = Double.parseDouble(line[6]);
					
					
					//opens.add(openss);
					
					System.out.println( openss + " " + highss + " " + lowss + " " + closess + " " + volumess + " " + adjclosess);
				
					
					
					
					
				

				}


			}


		}
		catch(Exception e){
			System.err.println(e);

		}



	}

	public ArrayList<GregorianCalendar> getDates(){

		return dates;
	}
		
	public ArrayList<Double> getOpens(){

		return opens;
	}



}
